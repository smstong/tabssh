#!/bin/bash

function print_bash_completion()
{
cat << "EOF"

_tabssh_words=()

function _tabssh_words_add()
{
	local i
	for i in "${_tabssh_words[@]}"
	do
		if [[ "$1" == "$i" ]]; then
			return
		fi
	done
	_tabssh_words+=("$1")
}
function _tabssh_read_config()
{
	# read ~/.tabssh
	local _tabssh_config=~/.tabssh
	local serverName
	local line
	if [[ -r ${_tabssh_config} ]]; then
		while read line
		do
			serverName=$(echo $line | cut -d' ' -f1) 
			_tabssh_words_add "$serverName"
		done < ${_tabssh_config}
	fi
	
	# read ~/.ssh/known_hosts
	local _tabssh_config=~/.ssh/known_hosts
	if [[ -r ${_tabssh_config} ]]; then
		while read line
		do
			serverName=$(echo $line | cut -d' ' -f1 | cut -d, -f1) 
			_tabssh_words_add "$serverName"
		done < ${_tabssh_config}
	fi
}

function _tabssh_completion()
{
	if [[ "${#COMP_WORDS[@]}" != "2" ]]; then
		return
	fi
	COMPREPLY=($(compgen -W "${_tabssh_words[*]}" "${COMP_WORDS[1]}"))
}

_tabssh_read_config
complete -F _tabssh_completion tabssh

EOF
}

function usage()
{
	echo -e "Usage: \n\t$(basename $0) [user@host | completion]"
	echo
	echo -e 'Notes: \n\tThe completion reads ~/.tabssh file that contains'
	echo -e '\tuser@host each line.'
}

############################ main ##########################
case $1 in
"completion")
	print_bash_completion
	exit
	;;
"")
	usage
	exit
	;;
*)
	tmux new-window -n $1 ssh $1
	;;
esac
